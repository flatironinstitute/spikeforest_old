#!/usr/bin/env python

import os
import sys
import argparse
import sfdata as sf
import batcho
import time
import mlprocessors as mlpr ## needed to register the mlprocessors batcho commands

# This can be important for some of the jobs in certain situations
os.environ['DISPLAY']=''

def main():
  parser = argparse.ArgumentParser(description = 'Listen for batches as a compute resource')
  parser.add_argument('compute_resource',help='Name of the compute resource')
  parser.add_argument('--run_prefix',help='Prefix for running jobs (e.g., srun)',required=False,default=None)
  parser.add_argument('--parallel',help='Number of jobs to run in parallel (should not be run in combination with a tool like srun)',required=False,default=None)
  parser.add_argument('--allow_uncontainerized',help='Allow jobs to run outside of containers (potentially dangerous)',action='store_true')

  args = parser.parse_args()

  if args.parallel:
      num_simultaneous=int(args.parallel)
  else:
      num_simultaneous=None

  print('Run prefix = {}'.format(args.run_prefix))
  print('Num num simultaneous = {}'.format(num_simultaneous))
  print('Allow uncontainerized = {}'.format(args.allow_uncontainerized))
  print('Listening as compute resource: {}'.format(args.compute_resource))
  batcho.listen_as_compute_resource(
      args.compute_resource,
      run_prefix=args.run_prefix,
      num_simultaneous=num_simultaneous,
      allow_uncontainerized=args.allow_uncontainerized
  )

if __name__== "__main__":
  main()
  
